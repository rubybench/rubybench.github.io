:ruby
  category_benchmarks = [
    %w[activerecord hexapdf liquid-render mail psych-load railsbench ruby-lsp],
    %w[binarytrees chunky_png erubi erubi_rails etanni fannkuchredux lee nbody optcarrot rubykon],
  ]
.benchmark_page
  .text-center
    %h1 yjit-bench

    = github_link 'Shopify/yjit-bench'

    #graph_metadata{ 'data-unit': 'seconds', 'data-type': 'line' }

    %ul.nav.nav-pills.benchmark_navbar
      - category_benchmarks.each do |benchmarks|
        - benchmarks.each_with_index do |benchmark, index|
          %li
            %a.activate-chart{ href: '#', 'data-id': benchmark }= benchmark
        %li{ style: 'clear: both; float: left; display: block; position: relative;' }

- graph_data = { 'data-versions': [], 'data-vm-values': [], 'data-mjit-values': [], 'data-yjit-values': [] }
- category_benchmarks.each do |benchmarks|
  - benchmarks.each do |benchmark|
    .benchmark_graph{ graph_data, id: benchmark, 'data-name': benchmark, style: "width: 100%; height: 340px;" }

:javascript
  $(function() {
    var rubies = {};

    function plotChart(graphElement) {
      var type = $('#graph_metadata').data('type');
      var unit = $('#graph_metadata').data('unit');
      var name = graphElement.data('name');

      var series = [{
        name: name,
        data: graphElement.data('vm-values')
      }, {
        name: name + ' +MJIT',
        data: graphElement.data('mjit-values')
      }, {
        name: name + ' +YJIT',
        data: graphElement.data('yjit-values')
      }]

      Highcharts.setOptions({ lang: { thousandsSep: '' } })
      Highcharts.chart(graphElement.attr('id'), {
        chart: {
          zoomType: 'x',
          type: type
        },
        title: {
          text: name
        },
        yAxis: {
          min: 0,
          title: {
            text: unit
          }
        },
        xAxis: {
          categories: graphElement.data('versions'),
          labels: {
            formatter: function() {
              var date = /ruby [^ ]+ \(([^)T ]+)/.exec(this.value)?.[1];
              var sha = /master ([^ ]+)\)/.exec(this.value)?.[1];
              return '<a href="https://github.com/ruby/ruby/commit/' + sha + '">' + date + '</a>';
            }
          }
        },
        series: series,
        plotOptions: {
          series: {
            animation: { duration: 400 }
          }
        }
      });
    };

    function activateChart(graphElement) {
      // TODO: show a loading indicator until it receives a response?

      var benchmark = graphElement.attr('id');
      $.get('https://raw.githubusercontent.com/rubybench/rubybench/master/results/yjit-bench/' + benchmark + '.yml').done(function (data) {
        // Show only graphElement and hide everything else
        $('.benchmark_graph').hide();
        graphElement.show();

        var versions = [];
        var vm_values = [];
        var mjit_values = [];
        var yjit_values = [];

        var date_results = jsyaml.load(data);
        for (var date in date_results) {
          var ruby = rubies[date];
          var results = date_results[date];
          versions.push(ruby);
          vm_values.push(results[0]);
          mjit_values.push(results[1]);
          yjit_values.push(results[2]);
        }

        graphElement.data('versions', versions);
        graphElement.data('vm-values', vm_values);
        graphElement.data('mjit-values', mjit_values);
        graphElement.data('yjit-values', yjit_values);

        plotChart(graphElement);
      });
    };

    $('.activate-chart').on('click', function(event) {
      event.preventDefault();
      $('.benchmark_navbar li').removeClass('active');
      $(this).closest('li').addClass('active');
      var id = $(this).data('id');
      var graphElement = $("#" + id);
      activateChart(graphElement);
      window.location.hash = id;
    });

    // Load rubies first
    $.get('https://raw.githubusercontent.com/rubybench/rubybench/master/rubies.yml').done(function (data) {
      rubies = jsyaml.load(data);

      // Activate a benchmark result
      var url = document.location.toString();
      if (url.match('#')) {
        var id = url.split('#')[1];
        $('.benchmark_navbar li').removeClass('active');
        activateChart($('.benchmark_graph#' + id));
        $('.activate-chart[data-id=' + id + ']').closest('li').addClass('active');
      }
      else {
        activateChart($('.benchmark_graph##{category_benchmarks.first.first}'));
      }
    });
  });

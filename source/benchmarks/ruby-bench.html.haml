:ruby
  benchmarks = YAML.load_file(File.expand_path('../../ruby-bench/benchmarks.yml', __dir__))
  category_benchmarks = %w[headline other micro].map do |category|
    benchmarks.filter_map do |name, benchmark|
      if benchmark.fetch('category', 'other') == category
        name
      end
    end
  end
.benchmark_page
  .text-center
    %h1 ruby-bench

    = github_link 'ruby/ruby-bench'

    #graph_metadata{ 'data-type': 'line' }

    %ul.nav.nav-pills.benchmark_navbar
      - category_benchmarks.each do |benchmarks|
        - benchmarks.each_with_index do |benchmark, index|
          %li
            %a.activate-chart{ href: '#', 'data-id': benchmark }= benchmark
        %li{ style: 'clear: both; float: left; display: block; position: relative;' }

- graph_data = { 'data-ruby-versions': [], 'data-vm-values': [], 'data-zjit-values': [], 'data-yjit-values': [] }
- category_benchmarks.each do |benchmarks|
  - benchmarks.each do |benchmark|
    .benchmark_graph{ graph_data, id: benchmark, 'data-name': benchmark, style: "width: 100%; height: 340px;" }

.benchmark_page
  .text-center
    %div.radio
      %label.metric_type
        %input{ type: 'radio', name: 'metric_type', value: 'Speedup', checked: true }
        Speedup
      %label.metric_type
        %input{ type: 'radio', name: 'metric_type', value: 'Time' }
        Time

:javascript
  $(function() {
    var rubies = {};

    // Convert 20250908 or "20250908" to "2025-09-08"
    function formatDate(date) {
      var n = Number(date);

      var year = Math.floor(n / 10000);
      var month = Math.floor(n / 100) % 100;
      var day = n % 100;

      return String(year) + '-' + String(month).padStart(2, '0') + '-' + String(day).padStart(2, '0');
    }

    function plotChart(graphElement, metricType) {
      var graphType = $('#graph_metadata').data('type');
      var name = graphElement.data('name');
      var unit = 'seconds';
      if (metricType == 'Speedup') {
        unit = 'times';
      }

      var series = [{
        name: 'No JIT',
        data: graphElement.data('vm-values'),
        color: '#3285e1'
      }, {
        name: 'YJIT',
        data: graphElement.data('yjit-values'),
        color: '#489d32'
      }, {
        name: 'ZJIT',
        data: graphElement.data('zjit-values'),
        color: '#e2c13e'
      }]
      var categories = graphElement.data('ruby-versions');

      Highcharts.setOptions({ lang: { thousandsSep: '' } })
      Highcharts.chart(graphElement.attr('id'), {
        chart: {
          zoomType: 'x',
          type: graphType
        },
        title: {
          text: name
        },
        yAxis: {
          min: 0,
          title: {
            text: unit
          }
        },
        xAxis: {
          categories: categories,
          labels: {
            formatter: function() {
              var date = Number(this.value);
              var sha = rubies[date];
              return '<a href="https://github.com/ruby/ruby/commit/' + sha + '">' + formatDate(date) + '</a>';
            }
          }
        },
        tooltip: {
          formatter: function(tooltip) {
            var date = Number(this.category);
            var sha = rubies[date].substring(0, 10);
            var prefix = '<span style="font-size: 10px">' + formatDate(date) + ' revision ' + sha + '</span><br/>' +
              '<span style="color:' + this.color + '">‚óè</span> ' + this.series.name + ': ';
            if (metricType == 'Speedup') {
              return prefix + '<b>' + this.y.toFixed(2) + 'x faster</b>';
            } else {
              return prefix + '<b>' + this.y + 's</b>';
            }
          }
        },
        series: series,
        plotOptions: {
          series: {
            animation: { duration: 400 }
          }
        }
      });
    };

    function activateChart(graphElement) {
      // TODO: show a loading indicator until it receives a response?

      var benchmark = graphElement.attr('id');
      $.get('https://raw.githubusercontent.com/rubybench/rubybench/master/results/ruby-bench/' + benchmark + '.yml').done(function (data) {
        // Show only graphElement and hide everything else
        $('.benchmark_graph').hide();
        graphElement.show();

        var ruby_versions = [];
        var vm_values = [];
        var yjit_values = [];
        var zjit_values = [];
        var metricType = $('input[name="metric_type"]:checked').val();

        var date_results = jsyaml.load(data);
        for (var date in date_results) {
          var vm_result = date_results[date][0];
          var yjit_result = date_results[date][1];
          var zjit_result = date_results[date][2];
          ruby_versions.push(date);
          if (metricType == 'Speedup') {
            vm_values.push(vm_result / vm_result);
            yjit_values.push(vm_result / yjit_result);
            zjit_values.push(vm_result / zjit_result);
          } else {
            vm_values.push(vm_result);
            yjit_values.push(yjit_result);
            zjit_values.push(zjit_result);
          }
        }

        graphElement.data('ruby-versions', ruby_versions);
        graphElement.data('vm-values', vm_values);
        graphElement.data('yjit-values', yjit_values);
        graphElement.data('zjit-values', zjit_values);

        plotChart(graphElement, metricType);
      });
    };

    // Switch active tab and render it
    $('.activate-chart').on('click', function(event) {
      event.preventDefault();
      $('.benchmark_navbar li').removeClass('active');
      $(this).closest('li').addClass('active');
      var id = $('.benchmark_navbar .active .activate-chart').data('id');
      var graphElement = $("#" + id);
      activateChart(graphElement);
      window.location.hash = id;
    });

    // Render it on radio click
    $('.metric_type').on('click', function(event) {
      var id = $('.benchmark_navbar .active .activate-chart').data('id');
      var graphElement = $("#" + id);
      activateChart(graphElement);
      window.location.hash = id;
    });

    // Load rubies first
    $.get('https://raw.githubusercontent.com/rubybench/rubybench/master/rubies.yml').done(function (data) {
      rubies = jsyaml.load(data);

      // Activate a benchmark result
      var url = document.location.toString();
      if (url.match('#')) {
        var id = url.split('#')[1];
        $('.benchmark_navbar li').removeClass('active');
        activateChart($('.benchmark_graph#' + id));
        $('.activate-chart[data-id=' + id + ']').closest('li').addClass('active');
      }
      else {
        activateChart($('.benchmark_graph##{category_benchmarks.first.first}'));
      }
    });
  });
